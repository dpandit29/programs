class Solution {
    public:
    pair<bool,int> isBalancedfast(TreeNode* root)
    {
        TreeNode* temp=root;
        if(temp==NULL)
        {  pair<bool,int> p=make_pair(true,0);
            return p;
        }
        pair<bool,int> left =isBalancedfast(temp->left);
        pair<bool,int> right=isBalancedfast(temp->right);

        bool leftans=left.first;
        bool rightans=right.first;

      
        bool res=abs(left.second-right.second) <=1;
        pair<bool,int>ans;
        ans.second=max(left.second,right.second)+1;
        if(leftans && rightans && res)
        {
            ans.first=true;
        }
        else
        {
            ans.first=false;
        }
        return ans;
    }
    
public:
    bool isBalanced(TreeNode* root) {
       return  isBalancedfast(root).first;
    }
};
